<Window x:Class="WallSetter_v2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WallSetter_v2"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewModels="clr-namespace:WallSetter_v2.ViewModels"
        xmlns:valueConverters="clr-namespace:WallSetter_v2.ValueConverters"
        xmlns:wallpaperControl="clr-namespace:WallSetter_v2.WallpaperControl"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        Icon="Resources/favicon-photo.ico"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
        Loaded="MainWindow_OnLoaded"
        Title="Wallpaper setter" Height="800" Width="1100">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <valueConverters:OpacityValueConverter x:Key="OpacityValueConverter" ></valueConverters:OpacityValueConverter>
            <valueConverters:BorderThicknessValueConverter x:Key="BorderThicknessValueConverter"></valueConverters:BorderThicknessValueConverter>
            <valueConverters:DoubleFloorValueConverter x:Key="DoubleFloorValueConverter"></valueConverters:DoubleFloorValueConverter>
            <valueConverters:ScaleValueConverter x:Key="ScaleValueConverter"></valueConverters:ScaleValueConverter>
            <valueConverters:PathToEnabledValueConverter x:Key="PathToEnabledValueConverter"></valueConverters:PathToEnabledValueConverter>
            
            <SolidColorBrush Opacity="0.45" Color="#673ab7" x:Key="BorderSolidColorBrush"></SolidColorBrush>
        </ResourceDictionary>
    </Window.Resources>
    
    <!--Key binding-->
    <Window.InputBindings>
        <KeyBinding Key="NumPad0" Modifiers="Control" Command="{Binding SetMinimalScaleCommand}"></KeyBinding>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SetCurrentScreenSizeCommand}"></KeyBinding>
        <KeyBinding Key="D" Modifiers="Control" Command="{Binding SetDefaultSizesCommand}"></KeyBinding>

        <KeyBinding Key="O" Modifiers="Control" Command="{Binding LoadFromFileCommand}"></KeyBinding>
        <KeyBinding Key="W" Modifiers="Alt" Command="{Binding DownloadFromWallhavenCommand}"></KeyBinding>
        <KeyBinding Key="U" Modifiers="Alt" Command="{Binding DownloadFromUnsplashCommand}"></KeyBinding>
        <KeyBinding Key="O" Modifiers="Alt" Command="{Binding LoadOriginalWallpaperCommand}"></KeyBinding>
        <KeyBinding Key="L" Modifiers="Alt" Command="{Binding DownloadFromLinkCommand}"></KeyBinding>
        <KeyBinding Key="Enter" Modifiers="Alt" Command="{Binding SetWallpaperCommand}"></KeyBinding>
    </Window.InputBindings>

    <materialDesign:DialogHost Identifier="RootDialog">
        <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300px"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>

                    <StackPanel Margin="15" Grid.Row="0">
                        <!--Size-->
                        <DockPanel Margin="0 6 -8 0">
                            <TextBlock Text="Wallpaper size" FontSize="18" FontWeight="Regular" DockPanel.Dock="Left" VerticalAlignment="Center" />
                            <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignCentres" VerticalAlignment="Center" HorizontalAlignment="Right">
                                <StackPanel>
                                    <Button Content="Double canvas size" Command="{Binding DoubleCanvasSizeCommand}"/>
                                    <Button Content="Set minimal scale (Ctrl + 0)" Command="{Binding SetMinimalScaleCommand}"/>
                            </StackPanel>
                            </materialDesign:PopupBox>
                        </DockPanel>
                        <!--Custom-->
                        <Grid Margin="0 5 0 5">
                            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                          IsChecked="{Binding UseCustomSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          VerticalAlignment="Center"
                                          IsEnabled="{Binding WallpaperViewModel.WallpaperModel.Path, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PathToEnabledValueConverter}}"
                                          ToolTip="Use custom size" />
                                <TextBlock Text="Use custom size"
                                       FontWeight="Light"
                                       VerticalAlignment="Center"
                                       Margin="10 0 0 0">

                                </TextBlock>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center">
                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                                    Margin="0 0 0 0"
                                    Width="20"
                                    Height="20"
                                    ToolTip="Set current screen size (Ctrl + S)"
                                    Command="{Binding SetCurrentScreenSizeCommand}">
                                    <materialDesign:PackIcon Kind="Airplay" />
                                </Button>

                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                                    x:Name="MiniSetDefaultButton"
                                    Margin="10 0 0 0"
                                    Width="20"
                                    Height="20"
                                    ToolTip="Set default size (Ctrl + D)"
                                    Command="{Binding SetDefaultSizesCommand}">
                                    <materialDesign:PackIcon Kind="Autorenew" Height="14" Width="14" />
                                </Button>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <ComboBox Grid.Column="0"
                                  IsEnabled="{Binding UseCustomSize, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                  materialDesign:HintAssist.Hint="Width" 
                                  MinWidth="72"
                                  Margin="0 0 5 0"
                                  VerticalAlignment="Bottom" 
                                  IsEditable="True"    
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                  ItemsSource="{Binding WidthItemSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        >
                                <ComboBox.Text>
                                    <Binding Path="Width" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                                    </Binding>
                                </ComboBox.Text>
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>

                            <ComboBox Grid.Column="1"
                                  materialDesign:HintAssist.Hint="Height" 
                                  IsEnabled="{Binding UseCustomSize, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                  MinWidth="72"
                                  Margin="5 0 0 0"
                                  VerticalAlignment="Bottom" 
                                  IsEditable="True"  
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                  ItemsSource="{Binding HeightItemSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        >
                                <ComboBox.Text>
                                    <Binding Path="Height" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                                    </Binding>
                                </ComboBox.Text>
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                        </Grid>

                        <!--Opacity-->
                        <TextBlock Text="Dark cover opacity" FontSize="18" FontWeight="Regular" Margin="0 30 0 0"></TextBlock>
                        <StackPanel>
                            <ComboBox materialDesign:HintAssist.Hint="Darken by" 
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}" 
                                  ItemsSource="{Binding OpacityItemSource}"
                                  >
                                <ComboBox.Text>
                                    <Binding Path="Opacity" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource OpacityValueConverter}"></Binding>
                                </ComboBox.Text>
                            </ComboBox>
                        </StackPanel>

                        <!--Wall mode-->
                        <TextBlock Text="Wallapaper style" FontSize="18" FontWeight="Regular" Margin="0 10 0 0"></TextBlock>
                        <ComboBox materialDesign:HintAssist.Hint="Select style"
                              Style="{StaticResource MaterialDesignFloatingHintComboBox}" 
                              ItemsSource="{Binding WallpaperStyleItemSource}"
                              SelectedValue="{Binding SelectedStyle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              >
                        </ComboBox>
                        
                        <Expander Header="Additional informations" HorizontalAlignment="Stretch">
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="Current dimensions" FontSize="18" FontWeight="Regular" Margin="0 0 0 0"></TextBlock>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding WallpaperViewModel.Width, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleFloorValueConverter}, ConverterParameter=2}" FontSize="14" FontWeight="Regular" Margin="0 10 0 0"></TextBlock>
                                    <TextBlock Text=" x " FontSize="14" FontWeight="Regular" Margin="0 10 0 0"></TextBlock>
                                    <TextBlock Text="{Binding WallpaperViewModel.Height, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleFloorValueConverter}, ConverterParameter=2}" FontSize="14" FontWeight="Regular" Margin="0 10 0 0"></TextBlock>
                                    <TextBlock Text=" px " FontSize="14" FontWeight="Regular" Margin="0 10 0 0"></TextBlock>
                                    <TextBlock Text="{Binding WallpaperViewModel.NewSizeInPercent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontSize="14" FontWeight="Regular" Margin="0 10 0 0"></TextBlock>
                            </StackPanel>
                                
                            <StackPanel Orientation="Horizontal" Margin="0 10 0 0">
                                <TextBlock Text="Scale" FontSize="18" FontWeight="Regular"></TextBlock>
                                <TextBlock Text=" (" FontSize="18" FontWeight="Regular" VerticalAlignment="Center"></TextBlock>
                                <TextBlock Text="{Binding Scale, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ScaleValueConverter}}" VerticalAlignment="Center" FontSize="18" FontWeight="Regular"></TextBlock>
                                <TextBlock Text=" %)" FontSize="18" FontWeight="Regular" VerticalAlignment="Center"></TextBlock>
                            </StackPanel>
                                
                            <Slider Margin="0 6 0 0"
                                    Minimum="5"
                                    Maximum="125"
                                    TickFrequency="5"
                                    AutoToolTipPlacement="BottomRight"
                                    AutoToolTipPrecision="2"
                                    Value="{Binding Scale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ScaleValueConverter}}"
                                    />
                            </StackPanel>
                        </Expander>
                    </StackPanel>

                <!--SetWall-->
                <StackPanel Grid.Row="2" Margin="15">
                    <TextBlock Text="{Binding SetWallpaperTooltipError, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Foreground="Crimson" FontWeight="Regular" FontSize="12"></TextBlock>
                    <Button 
                        Style="{StaticResource MaterialDesignRaisedButton}" 
                        Content="Set as current wallpaper"
                        ToolTip="Set as current wallpaper (Alt + Enter)"
                        Command="{Binding SetWallpaperCommand}"
                    />
                </StackPanel>
            </Grid>

                <Grid Grid.Column="1">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" 
                              VerticalScrollBarVisibility="Auto"
                              ScrollChanged="ScrollViewer_OnScrollChanged"
                              PreviewMouseWheel="ScrollViewer_OnPreviewMouseWheel"
                              Background="{StaticResource MaterialDesignBackground}"
                              x:Name="ScrollViewer">
                        <Canvas Width="{Binding CanvasWidth, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Height="{Binding CanvasHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" x:Name="RootCanvas" Background="#fafafa">
                            <Border BorderThickness="{Binding Scale, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BorderThicknessValueConverter}}" 
                                BorderBrush="{StaticResource BorderSolidColorBrush}" 
                                Width="{Binding Width, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                Height="{Binding Height, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                Canvas.Top="{Binding Top, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                Canvas.Left="{Binding Left, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                Canvas.ZIndex="100"
                                IsHitTestVisible="False"
                                >
                                <Canvas 
                               Background="Black" 
                               Opacity="{Binding Opacity, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                               />
                            </Border>

                            <wallpaperControl:WallpaperControl x:Name="WallpaperControl" 
                                                           RootCanvas="{Binding ElementName=RootCanvas}" />

                            <Canvas.LayoutTransform>
                                <ScaleTransform ScaleX="{Binding Scale, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" ScaleY="{Binding Scale, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"></ScaleTransform>
                            </Canvas.LayoutTransform>
                        </Canvas>
                    </ScrollViewer>

                    <!--Popup button for opening files-->
                    <materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}" 
                                         Margin="40"
                                         HorizontalAlignment="Right" 
                                         VerticalAlignment="Bottom">
                        <StackPanel>
                            <Button ToolTip="Load wallpaper from file (Ctrl + O)"
                                Command="{Binding LoadFromFileCommand}"
                                Background="CornflowerBlue"
                                Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                                <materialDesign:PackIcon Kind="FileImage" />
                            </Button>

                        <Button ToolTip="Download from https://unsplash.com/ (Alt + U)"
                                Command="{Binding DownloadFromUnsplashCommand}"
                                Background="{DynamicResource PrimaryHueMidBrush}"
                                Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                                <materialDesign:PackIcon Kind="Camera" />
                            </Button>

                        <Button ToolTip="Download from https://alpha.wallhaven.cc/ (Alt + W)"
                                Command="{Binding DownloadFromWallhavenCommand}"
                                Background="{DynamicResource PrimaryHueDarkBrush}"
                                Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                                <materialDesign:PackIcon Kind="FileWordBox" />
                            </Button>

                        <Button ToolTip="Download from url (Alt + L)"
                                Background="{DynamicResource SecondaryAccentBrush}"
                                Command="{Binding DownloadFromLinkCommand}"
                                Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                                <materialDesign:PackIcon Kind="Download" />
                            </Button>

                        <Button ToolTip="Load original wallpaper (Alt + O)"
                                Background="Coral"
                                Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                Command="{Binding LoadOriginalWallpaperCommand}">
                                <materialDesign:PackIcon Kind="Refresh" />
                            </Button>
                        </StackPanel>
                    </materialDesign:PopupBox>

                    <materialDesign:Snackbar MessageQueue="{Binding MessageQueue}">
                        <materialDesign:SnackbarMessage Content="Hello world"></materialDesign:SnackbarMessage>
                    </materialDesign:Snackbar>
                </Grid>
            </Grid>
    </materialDesign:DialogHost>

</Window>















